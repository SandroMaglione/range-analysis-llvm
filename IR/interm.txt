%retval = alloca i32, align 4
%a = alloca i32, align 4
%b = alloca i32, align 4
%c = alloca i32, align 4
%d = alloca i32, align 4
%e = alloca i32, align 4
store i32 0, i32* %retval, align 4      retval = 0                      ranged = [ {retval, 0, 0} ]
store i32 0, i32* %a, align 4           a = 0                           ranged = [ {retval, 0, 0}, {a, 0, 0} ]
store i32 10, i32* %b, align 4          b = 10                          ranged = [ {retval, 0, 0}, {a, 0, 0}, {b, 10, 10} ]
%0 = load i32, i32* %a, align 4         loadRef = [ a ]                 
%add = add nsw i32 3, %0                add = 3 + a, loadRef = []       ref = [ {add, /, a, 3, + } ]
store i32 %add, i32* %c, align 4        c = add                         ref = [ {add, /, a, 3, + }, {c, add, /, 0, +} ]
%1 = load i32, i32* %b, align 4         loadRef = [ b ]
%2 = load i32, i32* %c, align 4         loadRef = [ b, c ]
%sub = sub nsw i32 %1, %2               sub = b - c, loadRef = []       ref = [ {add, /, a, 3, + }, {c, add, /, 0, +}, {sub, b, c, 0, -} ]
store i32 %sub, i32* %d, align 4        d = sub                         ref = [ {add, /, a, 3, + }, {c, add, /, 0, +}, {sub, b, c, 0, -}, {d, sub, /, 0, -} ]
%3 = load i32, i32* %d, align 4         loadRef = [ d ]
%add1 = add nsw i32 %3, 7               add1 = d + 7, loadRef = []      ref = [ {add, /, a, 3, + }, {c, add, /, 0, +}, {sub, b, c, 0, -}, {d, sub, /, 0, -}, {add1, d, /, 7, +} ]
store i32 %add1, i32* %e, align 4       e = add1                        ref = [ {add, /, a, 3, + }, {c, add, /, 0, +}, {sub, b, c, 0, -}, {d, sub, /, 0, -}, {add1, d, /, 7, +}, {e, add1, /, 0, +} ]
ret i32 0

ref = [
    {add, /, a, 3, + },
    {c, add, /, 0, +},
    {sub, b, c, 0, -},
    {d, sub, /, 0, -},
    {add1, d, /, 7, +},
    {e, add1, /, 0, +}
]

ranged = [
    {retval, 0, 0},
    {a, 0, 0},
    {b, 10, 10}
]

a = 0 -> add = a + 3 = 0 + 3 = 3
ranged = [ {retval, 0, 0}, {a, 0, 0}, {b, 10, 10}, {add, 3, 3} ]

add = 3 -> c = add = 3
ranged = [ {retval, 0, 0}, {a, 0, 0}, {b, 10, 10}, {add, 3, 3}, {c, 3, 3} ]

b = 10
c = 3
-> sub = b - c = 10 - 3 = 7
ranged = [ {retval, 0, 0}, {a, 0, 0}, {b, 10, 10}, {add, 3, 3}, {c, 3, 3}, {sub, 7, 7} ]

d = 7 -> add1 = d + 7 = 14
ranged = [ {retval, 0, 0}, {a, 0, 0}, {b, 10, 10}, {add, 3, 3}, {c, 3, 3}, {sub, 7, 7}, {add1, 14, 14} ]

add1 = 14 -> e = add1 = 14
ranged = [ {retval, 0, 0}, {a, 0, 0}, {b, 10, 10}, {add, 3, 3}, {c, 3, 3}, {sub, 7, 7}, {add1, 14, 14}, {e, 14, 14} ]

ranged = [
    {retval, 0, 0},
    {a, 0, 0},
    {b, 10, 10},
    {add, 3, 3},
    {c, 3, 3},
    {sub, 7, 7},
    {add1, 14, 14},
    {e, 14, 14}
]