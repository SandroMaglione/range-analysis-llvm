--- entry ---
___No visited

@Br-Simple
entry to while.cond
ADDED TO WORKLIST while.cond (sameRanges=1, wasVisited=0, isUpdated=0)


--- while.cond ---
___No references

@Phi: k.0 (, add3)
ONE REFERENCE MISSING

@Cmp

@Br-Complex
k.0 < 30 [unsigned]
if.end: (0, 29)
while.end: (30, 2147483647)
NEW VISITED ADDED: if.end
NEW VISITED ADDED: while.end
ADDED TO WORKLIST if.end (sameRanges=1, wasVisited=1, isUpdated=1)
ADDED TO WORKLIST while.end (sameRanges=1, wasVisited=1, isUpdated=1)


--- if.end ---
___k.0(0, 29)

@Operation
BINARY OPERATION: original -> k.0 (0, 29) into if.end
NEW REFERENCE VALUE: add3 (2, 31) into if.end

@Br-Simple
if.end to while.cond

What about k.0?
NOW ADDED: k.0

What about add3?
NOW ADDED: add3
ADDED TO WORKLIST while.cond (sameRanges=0, wasVisited=1, isUpdated=0)


--- while.end ---
___k.0(30, 2147483647)



--- while.cond ---
___k.0(0, 29)
___add3(2, 31)

@Phi: k.0 (, add3)
New Range: (0, 31)

@Cmp

@Br-Complex
k.0 < 30 [unsigned]
if.end: (0, 29)
while.end: (30, 31)
CHECK RANGE of k.0: (0, 29) to (0, 29)
CHECK RANGE of k.0: (30, 2147483647) to (30, 31)
RANGE CHANGED: k.0 from while.end
ADDED TO WORKLIST while.end (sameRanges=1, wasVisited=1, isUpdated=1)


--- while.end ---
___k.0(30, 31)


--- VALUE-RANGES ---
BB: entry

BB: while.cond
   k.0(0, 31) = 32 is 6bits
   add3(2, 31) = 30 is 6bits

BB: if.end
   k.0(0, 29) = 30 is 6bits
   add3(2, 31) = 30 is 6bits

BB: while.end
   k.0(30, 31) = 2 is 2bits
