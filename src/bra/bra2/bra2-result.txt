--- entry ---
___No visited

@Br-Simple
entry to while.cond
ADDED TO WORKLIST while.cond (sameRanges=1, wasVisited=0, isUpdated=0)


--- while.cond ---
___No references

@Phi: k.0 (, add2)
ONE REFERENCE MISSING

@Cmp

@Br-Complex
k.0 == 100
while.end: (100, 100)
if.end: (-2147483648, 2147483647)
NEW VISITED ADDED: while.end
NEW VISITED ADDED: if.end
ADDED TO WORKLIST while.end (sameRanges=1, wasVisited=1, isUpdated=1)
ADDED TO WORKLIST if.end (sameRanges=1, wasVisited=1, isUpdated=1)


--- while.end ---
___k.0(100, 100)



--- if.end ---
___k.0(-2147483648, 2147483647)

@Operation
BINARY OPERATION: original -> k.0 (-2147483648, 2147483647) into if.end
NEW REFERENCE VALUE: add2 (-2147483648, 2147483647) into if.end

@Br-Simple
if.end to while.cond

What about k.0?
NOW ADDED: k.0

What about add2?
NOW ADDED: add2
ADDED TO WORKLIST while.cond (sameRanges=0, wasVisited=1, isUpdated=0)


--- while.cond ---
___k.0(-2147483648, 2147483647)
___add2(-2147483648, 2147483647)

@Phi: k.0 (, add2)
New Range: (-2147483648, 2147483647)

@Cmp

@Br-Complex
k.0 == 100
while.end: (100, 100)
if.end: (-2147483648, 2147483647)
CHECK RANGE of k.0: (100, 100) to (100, 100)
CHECK RANGE of k.0: (-2147483648, 2147483647) to (-2147483648, 2147483647)

--- VALUE-RANGES ---
BB: entry

BB: while.cond
   k.0(-2147483648, 2147483647) = 2 is 2bits
   add2(-2147483648, 2147483647) = 2 is 2bits

BB: if.end
   k.0(-2147483648, 2147483647) = 2 is 2bits
   add2(-2147483648, 2147483647) = 2 is 2bits

BB: while.end
   k.0(100, 100) = 1 is 2bits
